@model Drugstore.Web.ViewModels.CadastroUsuarioViewModel
@{
    ViewBag.Title = "Cadastrar";
}
@{
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}
<meta name=viewport content="user-scalable=no, width=device-width, initial-scale=1.0" />
<meta name=apple-mobile-web-app-capable content=yes />

<script>
    $(document).ready(function () {
        $("#maskCPF").mask("999.999.999-99");
    });
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="main-container">
        <div class="container">
            <div class="form-group row pb-5">
                <div class="page-title">
                    <h3>
                        Crie sua conta
                    </h3>
                </div>
            </div>
            <div class="account-create">
                <div class="content">
                    <div class="fields-account-create">
                        <div class="short name-firstname" style="margin-right: 35px !important;">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="col-md-7">
                                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "name" })<span class="text-danger">*</span>
                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", placeholder = "Ex.: José" } })
                                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-7">
                                @Html.LabelFor(model => model.Sobrenome, htmlAttributes: new { @class = "name" })<span class="text-danger">*</span>
                                @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control", placeholder = "Ex.: da Silva" } })
                                @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-7">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "name" })<span class="text-danger">*</span>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Seu e-mail" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-7">
                                @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "name" })<span class="text-danger">*</span>
                                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-7">
                                @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "name" })<span class="text-danger">*</span>
                                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control maskCPF", placeholder = "Ex.: 123.456.789-12", data_tipo = "cpf", maxlength = "14" } })
                                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-7">
                                @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "name" })<span class="text-danger">*</span>
                                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                                <p><!-- react-text: 255 -->Ao prosseguir, concordo<!-- /react-text --><br><!-- react-text: 257 -->com os <!-- /react-text --><a href="#modalTermos" data-modal="true">Termos e Condições de Uso</a></p>
                            </div>

                        </div>

                    </div>
                  
                    <div class="form-group">
                        <div class="col-md-8">
                            <input type="submit" value="Cadastrar" class="btn btn-primary" />
                            <input type="submit" href="@Url.Action("Login", "Autenticacao")" value="Cancelar" class="btn btn-danger" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


}


@section scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
